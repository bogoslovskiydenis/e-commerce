// scripts/seedCategories.mjs
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function seedCategories() {
    console.log('üå± –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');

    try {
        // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —Ç–∏–ø–∞–º
        const categories = [
            {
                name: '–§–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à–∞—Ä–∏–∫–∏',
                slug: 'foil-balloons',
                description: '–Ø—Ä–∫–∏–µ –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω—ã–µ —Ñ–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à–∞—Ä—ã –¥–ª—è –ª—é–±–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞',
                type: 'BALLOONS',
                sortOrder: 1,
                showInNavigation: true,
                metaTitle: '–§–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à–∞—Ä–∏–∫–∏ - –∫—É–ø–∏—Ç—å –≤ –ö–∏–µ–≤–µ',
                metaDescription: '–ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä —Ñ–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —à–∞—Ä–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º –∏ —Ä–∞–∑–º–µ—Ä–æ–≤.',
                metaKeywords: '—Ñ–æ–ª—å–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à–∞—Ä—ã, —à–∞—Ä–∏–∫–∏ –∏–∑ —Ñ–æ–ª—å–≥–∏, –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —à–∞—Ä—ã'
            },
            {
                name: '–õ–∞—Ç–µ–∫—Å–Ω—ã–µ —à–∞—Ä–∏–∫–∏',
                slug: 'latex-balloons',
                description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ª–∞—Ç–µ–∫—Å–Ω—ã–µ —à–∞—Ä—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Ü–≤–µ—Ç–æ–≤',
                type: 'BALLOONS',
                sortOrder: 2,
                showInNavigation: true,
                metaTitle: '–õ–∞—Ç–µ–∫—Å–Ω—ã–µ —à–∞—Ä–∏–∫–∏ - —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–æ–≤',
                metaDescription: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ª–∞—Ç–µ–∫—Å–Ω—ã–µ —à–∞—Ä—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤.',
                metaKeywords: '–ª–∞—Ç–µ–∫—Å–Ω—ã–µ —à–∞—Ä—ã, –≤–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä–∏–∫–∏, —Ü–≤–µ—Ç–Ω—ã–µ —à–∞—Ä—ã'
            },
            {
                name: '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
                slug: 'birthday-balloons',
                description: '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —à–∞—Ä—ã –∏ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è',
                type: 'EVENTS',
                sortOrder: 3,
                showInNavigation: true,
                metaTitle: '–®–∞—Ä–∏–∫–∏ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
                metaDescription: '–®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä —à–∞—Ä–æ–≤ –¥–ª—è –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è.',
                metaKeywords: '—à–∞—Ä—ã –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —à–∞—Ä—ã'
            },
            {
                name: '–°–≤–∞–¥–µ–±–Ω—ã–µ —à–∞—Ä–∏–∫–∏',
                slug: 'wedding-balloons',
                description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ —à–∞—Ä—ã –∏ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è —Å–≤–∞–¥–µ–±–Ω–æ–≥–æ —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞',
                type: 'EVENTS',
                sortOrder: 4,
                showInNavigation: true,
                metaTitle: '–°–≤–∞–¥–µ–±–Ω—ã–µ —à–∞—Ä–∏–∫–∏',
                metaDescription: '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ –≤–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã –¥–ª—è —Å–≤–∞–¥–µ–±–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è.',
                metaKeywords: '—Å–≤–∞–¥–µ–±–Ω—ã–µ —à–∞—Ä—ã, —à–∞—Ä—ã –Ω–∞ —Å–≤–∞–¥—å–±—É'
            },
            {
                name: '–ö—Ä–∞—Å–Ω—ã–µ —à–∞—Ä–∏–∫–∏',
                slug: 'red-balloons',
                description: '–Ø—Ä–∫–∏–µ –∫—Ä–∞—Å–Ω—ã–µ —à–∞—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è',
                type: 'COLORS',
                sortOrder: 5,
                showInNavigation: true,
                metaTitle: '–ö—Ä–∞—Å–Ω—ã–µ —à–∞—Ä–∏–∫–∏',
                metaDescription: '–ö—Ä–∞—Å–Ω—ã–µ –≤–æ–∑–¥—É—à–Ω—ã–µ —à–∞—Ä—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤.',
                metaKeywords: '–∫—Ä–∞—Å–Ω—ã–µ —à–∞—Ä—ã, –∞–ª—ã–µ —à–∞—Ä—ã'
            },
            {
                name: '–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã',
                slug: 'gift-sets',
                description: '–ì–æ—Ç–æ–≤—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –∏ –Ω–∞–±–æ—Ä—ã —à–∞—Ä–æ–≤ –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞',
                type: 'GIFTS',
                sortOrder: 6,
                showInNavigation: true,
                metaTitle: '–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —à–∞—Ä–æ–≤',
                metaDescription: '–ö—Ä–∞—Å–∏–≤—ã–µ –ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã –∏–∑ –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤.',
                metaKeywords: '–ø–æ–¥–∞—Ä–æ—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã, –±—É–∫–µ—Ç—ã —à–∞—Ä–æ–≤'
            }
        ];

        // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for (const categoryData of categories) {
            try {
                const existingCategory = await prisma.category.findUnique({
                    where: { slug: categoryData.slug }
                });

                if (!existingCategory) {
                    await prisma.category.create({
                        data: {
                            ...categoryData,
                            isActive: true
                        }
                    });
                    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryData.name}`);
                } else {
                    console.log(`‚ö†Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${categoryData.name}`);
                }
            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryData.name}:`, error.message);
            }
        }

        console.log('üéâ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    } finally {
        await prisma.$disconnect();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
seedCategories();