import { z } from 'zod';
import { ALL_PERMISSIONS, ROLE_PERMISSIONS } from '@/controllers/permissions.controller';

// –°—Ö–µ–º–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
export const checkPermissionsSchema = z.object({
    body: z.object({
        userId: z.string().min(1, 'User ID is required'),
        permissions: z.array(z.string()).min(1, 'At least one permission required')
    })
});

// –°—Ö–µ–º–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const updateUserPermissionsSchema = z.object({
    body: z.object({
        permissions: z.array(
            z.string().refine(
                (permission) => ALL_PERMISSIONS.includes(permission),
                { message: 'Invalid permission' }
            )
        ).optional(),
        customPermissions: z.array(
            z.string().refine(
                (permission) => ALL_PERMISSIONS.includes(permission),
                { message: 'Invalid custom permission' }
            )
        ).optional(),
        role: z.enum(['SUPER_ADMIN', 'ADMINISTRATOR', 'MANAGER', 'CRM_MANAGER']).optional()
    }).refine(
        (data) => data.permissions || data.customPermissions || data.role,
        { message: 'At least one field (permissions, customPermissions, or role) must be provided' }
    )
});

// –°—Ö–µ–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
export const addPermissionSchema = z.object({
    body: z.object({
        permission: z.string().refine(
            (permission) => ALL_PERMISSIONS.includes(permission),
            { message: 'Invalid permission' }
        )
    })
});

// –°—Ö–µ–º–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ä–æ–ª–∏
export const roleParamSchema = z.object({
    params: z.object({
        role: z.string().refine(
            (role) => Object.keys(ROLE_PERMISSIONS).includes(role.toUpperCase()),
            { message: 'Invalid role' }
        )
    })
});

// –°—Ö–µ–º–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const userIdParamSchema = z.object({
    params: z.object({
        id: z.string().min(1, 'User ID is required')
    })
});

// –°—Ö–µ–º–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
export const permissionParamSchema = z.object({
    params: z.object({
        id: z.string().min(1, 'User ID is required'),
        permission: z.string().refine(
            (permission) => ALL_PERMISSIONS.includes(permission),
            { message: 'Invalid permission' }
        )
    })
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
export class PermissionValidator {

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    static isValidPermission(permission: string): boolean {
        return ALL_PERMISSIONS.includes(permission);
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Ä–æ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    static isValidRole(role: string): boolean {
        return Object.keys(ROLE_PERMISSIONS).includes(role.toUpperCase());
    }

    // –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    static getPermissionsByCategory(category: string): string[] {
        return ALL_PERMISSIONS.filter(p => p.startsWith(`${category}.`));
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    static canAssignPermissions(userPermissions: string[], permissionsToAssign: string[]): {
        canAssign: boolean;
        forbidden: string[];
    } {
        // –°—É–ø–µ—Ä–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å –ª—é–±—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        if (userPermissions.includes('admin.full_access')) {
            return { canAssign: true, forbidden: [] };
        }

        // –û–±—ã—á–Ω—ã–µ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É –Ω–∏—Ö
        const forbidden = permissionsToAssign.filter(permission =>
            !userPermissions.includes(permission) &&
            permission !== 'admin.full_access' // –û–±—ã—á–Ω—ã–µ –∞–¥–º–∏–Ω—ã –Ω–µ –º–æ–≥—É—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø
        );

        return {
            canAssign: forbidden.length === 0,
            forbidden
        };
    }

    // –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    static validatePermissions(permissions: string[]): {
        valid: boolean;
        invalidPermissions: string[];
        duplicates: string[];
    } {
        const invalidPermissions = permissions.filter(p => !ALL_PERMISSIONS.includes(p));
        const duplicates = permissions.filter((p, index) => permissions.indexOf(p) !== index);

        return {
            valid: invalidPermissions.length === 0 && duplicates.length === 0,
            invalidPermissions,
            duplicates
        };
    }

    // –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    static getPermissionDescription(permission: string): string {
        const descriptions: Record<string, string> = {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            'users.create': '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
            'users.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
            'users.delete': '–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
            'users.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',

            // –¢–æ–≤–∞—Ä—ã
            'products.create': '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤',
            'products.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
            'products.delete': '–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
            'products.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤',
            'products.import': '–ò–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤',
            'products.export': '–≠–∫—Å–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤',

            // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
            'categories.create': '–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
            'categories.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
            'categories.delete': '–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
            'categories.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π',

            // –ó–∞–∫–∞–∑—ã
            'orders.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤',
            'orders.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤',
            'orders.delete': '–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤',
            'orders.create': '–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤',
            'orders.export': '–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–æ–≤',
            'orders.refund': '–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –∑–∞–∫–∞–∑–∞–º',

            // –ö–ª–∏–µ–Ω—Ç—ã
            'customers.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–ª–∏–µ–Ω—Ç–æ–≤',
            'customers.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
            'customers.delete': '–£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤',
            'customers.export': '–≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–æ–≤',

            // –û—Ç–∑—ã–≤—ã
            'reviews.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤',
            'reviews.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤',
            'reviews.delete': '–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤',
            'reviews.moderate': '–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤',

            // –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            'callbacks.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫',
            'callbacks.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫',
            'callbacks.delete': '–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫',

            // –°–∞–π—Ç –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
            'website.banners': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞–º–∏',
            'website.pages': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ —Å–∞–π—Ç–∞',
            'website.settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞',
            'website.navigation': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π',

            // –°–∫–∏–¥–∫–∏ –∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã
            'promotions.create': '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –∏ —Å–∫–∏–¥–æ–∫',
            'promotions.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤',
            'promotions.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤',
            'promotions.delete': '–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤',

            // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
            'analytics.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ–±—â–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
            'analytics.basic': '–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
            'analytics.marketing': '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
            'analytics.advanced': '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',

            // –°–∏—Å—Ç–µ–º–Ω—ã–µ
            'logs.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Å–∏—Å—Ç–µ–º—ã',
            'api_keys.manage': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–∞–º–∏',
            'admin.full_access': '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',

            // Email –º–∞—Ä–∫–µ—Ç–∏–Ω–≥
            'emails.send': '–û—Ç–ø—Ä–∞–≤–∫–∞ email —Ä–∞—Å—Å—ã–ª–æ–∫',
            'emails.templates': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏ –ø–∏—Å–µ–º',
            'loyalty.manage': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏',

            // –§–∞–π–ª—ã
            'files.upload': '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤',
            'files.delete': '–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤',
            'files.manage': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏'
        };

        return descriptions[permission] || permission;
    }

    // –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    static getPermissionCategory(permission: string): string {
        const [category] = permission.split('.');
        return category;
    }

    // –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    static getCategoryIcon(category: string): string {
        const icons: Record<string, string> = {
            users: 'üë•',
            products: 'üì¶',
            categories: 'üìÇ',
            orders: 'üìã',
            customers: 'üë§',
            reviews: '‚≠ê',
            callbacks: 'üìû',
            website: 'üåê',
            promotions: 'üéØ',
            analytics: 'üìä',
            logs: 'üìù',
            api_keys: 'üîë',
            admin: '‚ö°',
            emails: '‚úâÔ∏è',
            loyalty: 'üéÅ',
            files: 'üìÅ'
        };

        return icons[category] || 'üîí';
    }
}